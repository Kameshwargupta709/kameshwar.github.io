{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/employee/create-employee.component.css","webpack:///./src/app/employee/create-employee.component.html","webpack:///./src/app/employee/create-employee.component.ts","webpack:///./src/app/employee/employee-routing.module.ts","webpack:///./src/app/employee/employee.module.ts","webpack:///./src/app/employee/employee.service.ts","webpack:///./src/app/employee/list-employee.component.css","webpack:///./src/app/employee/list-employee.component.html","webpack:///./src/app/employee/list-employee.component.ts","webpack:///./src/app/home.component.css","webpack:///./src/app/home.component.html","webpack:///./src/app/home.component.ts","webpack:///./src/app/page-not-found.component.css","webpack:///./src/app/page-not-found.component.html","webpack:///./src/app/page-not-found.component.ts","webpack:///./src/app/shared/custom.validators.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport {RouterModule,Routes} from '@angular/router'\r\nimport { HomeComponent } from './home.component';\r\nimport { PageNotFoundComponent } from './page-not-found.component';\r\n\r\nconst appRoutes: Routes=[\r\n  {path:'home',component:HomeComponent},\r\n  {path:'',redirectTo:\"/home\",pathMatch:\"full\"},\r\n  {path:'**',component:PageNotFoundComponent}\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  exports:[RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <ul class=\\\"nav navbar-nav\\\">\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"home\\\">Home</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"employees\\\">List</a>\\n      </li>\\n      <li>\\n        <a routerLinkActive=\\\"active\\\" routerLink=\\\"employees/create\\\">Create</a>\\n      </li>\\n    </ul>\\n  </nav>\\n    <router-outlet></router-outlet>\\n </div>     \\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { EmployeeService } from './employee/employee.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home.component';\nimport { PageNotFoundComponent } from './page-not-found.component';\nimport { EmployeeModule } from './employee/employee.module';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AngularWebStorageModule } from 'angular-web-storage';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    EmployeeModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AngularWebStorageModule\n  ],\n  providers: [EmployeeService,CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"hr{\\r\\n    border:1px solid silver;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1wbG95ZWUvY3JlYXRlLWVtcGxveWVlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSx1QkFBdUI7QUFDM0IiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llZS9jcmVhdGUtZW1wbG95ZWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImhye1xyXG4gICAgYm9yZGVyOjFweCBzb2xpZCBzaWx2ZXI7XHJcbn0iXX0= */\"","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"employeeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n  <div class=\\\"panel panel-primary\\\">\\n\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">{{pageTitle}}</h3>\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.fullName}\\\">\\n        <label class=\\\"col-sm-2 control-label\\\" for=\\\"fullName\\\">Full Name</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input id=\\\"fullName\\\" formControlName=\\\"fullName\\\" type=\\\"text\\\" class=\\\"form-control\\\" (blur)=\\\"logValidationErrors()\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.fullName\\\">\\n            {{formErrors.fullName}}\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-2 control-label\\\" for=\\\"contactPreference\\\">Contact Preference</label>\\n        <div class=\\\"col-md-8\\\">\\n          <label class=\\\"radio-inline\\\">\\n            <input formControlName=\\\"contactPreference\\\" type=\\\"radio\\\" value=\\\"email\\\">Email\\n          </label>\\n          <label class=\\\"radio-inline\\\">\\n            <input formControlName=\\\"contactPreference\\\" type=\\\"radio\\\" value=\\\"phone\\\">Phone\\n          </label>\\n        </div>\\n      </div>\\n\\n      <div formGroupName=\\\"emailGroup\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.email}\\\">\\n          <label class=\\\"col-sm-2 control-label\\\" for=\\\"email\\\">Email</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input id=\\\"email\\\" formControlName=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" (blur)=\\\"logValidationErrors()\\\">\\n              <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.email\\\">\\n                {{formErrors.email}}\\n              </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.confirmEmail || formErrors.emailGroup}\\\">\\n          <label class=\\\"col-sm-2 control-label\\\" for=\\\"confirmEmail\\\">Confirm Email</label>\\n          <div class=\\\"col-sm-8\\\">\\n            <input id=\\\"confirmEmail\\\" formControlName=\\\"confirmEmail\\\" type=\\\"text\\\" class=\\\"form-control\\\" (blur)=\\\"logValidationErrors()\\\">\\n            <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.confirmEmail || formErrors.emailGroup\\\">\\n              {{formErrors.confirmEmail ? formErrors.confirmEmail:formErrors.emailGroup}}\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': formErrors.phone}\\\">\\n        <label class=\\\"col-sm-2 control-label\\\" for=\\\"phone\\\">Phone</label>\\n        <div class=\\\"col-sm-8\\\">\\n          <input id=\\\"phone\\\" formControlName=\\\"phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" (blur)=\\\"logValidationErrors()\\\">\\n          <span class=\\\"help-block\\\" *ngIf=\\\"formErrors.phone\\\">\\n            {{formErrors.phone}}\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"well\\\">\\n\\n          <div class=\\\"form-group\\\">\\n              <div class=\\\"col-sm-offset-2 col-sm-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"addSkillButtonClick()\\\" [disabled]=\\\"employeeForm.get('skills').invalid\\\">\\n                  Add Skill\\n                </button>\\n              </div>\\n            </div>\\n\\n\\n        <div formArrayName=\\\"skills\\\">\\n\\n        <div *ngFor=\\\"let skill of employeeForm.get('skills').controls; let i = index\\\">\\n          <hr *ngIf=\\\"i>0\\\"/>\\n          <div [formGroupName]=\\\"i\\\">\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': skill.get('skillName').invalid && skill.get('skillName').touched}\\\">\\n              <label class=\\\"col-sm-2 control-label\\\" attr.for=\\\"{{'skillName'+i}}\\\">Skills</label>\\n              <div class=\\\"col-sm-4\\\">\\n                <input type=\\\"text\\\" id=\\\"{{'skillName'+i}}\\\" placeholder=\\\"C#,Java,Angular etc...\\\" formControlName=\\\"skillName\\\" class=\\\"form-control\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"skill.get('skillName').errors?.required && skill.get('skillName').touched\\\">\\n                    Skill Name is required.\\n                </span>\\n              </div>\\n              <div class=\\\"col-sm-6\\\" *ngIf=\\\"employeeForm.get('skills').length>1\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm pull-right\\\" title=\\\"Delete\\\" (click)=\\\"removeSkillButtonClick(i)\\\">\\n                  <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': skill.get('experienceInYears').invalid && skill.get('experienceInYears').touched}\\\">\\n              <label class=\\\"col-sm-2 control-label\\\" attr.for=\\\"{{'experienceInYears'+i}}\\\">Experience</label>\\n              <div class=\\\"col-sm-4\\\">\\n                <input type=\\\"text\\\" id=\\\"{{'experienceInYears'+i}}\\\" placeholder=\\\"In Year\\\" formControlName=\\\"experienceInYears\\\" class=\\\"form-control\\\">\\n                <span class=\\\"help-block\\\" *ngIf=\\\"skill.get('experienceInYears').errors?.required && skill.get('experienceInYears').touched\\\">\\n                    Experience is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': skill.get('proficiency').invalid && skill.get('proficiency').touched}\\\">\\n              <label class=\\\"col-md-2 control-label\\\">Proficiency</label>\\n              <div class=\\\"col-md-8\\\">\\n                <label class=\\\"radio-inline\\\">\\n                  <input formControlName=\\\"proficiency\\\" type=\\\"radio\\\" value=\\\"beginner\\\">Beginner\\n                </label>\\n                <label class=\\\"radio-inline\\\">\\n                  <input formControlName=\\\"proficiency\\\" type=\\\"radio\\\" value=\\\"intermidate\\\">Intermidate\\n                </label>\\n                <label class=\\\"radio-inline\\\">\\n                  <input formControlName=\\\"proficiency\\\" type=\\\"radio\\\" value=\\\"advanced\\\">Advanced\\n                </label>\\n                <span class=\\\"help-block\\\" *ngIf=\\\"skill.get('proficiency').errors?.required && skill.get('proficiency').touched\\\">\\n                    Proficiency is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n    <div class=\\\"panel-footer\\\">\\n      <div class=\\\"btn-toolbar\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"employeeForm.invalid\\\">Save</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onLoadDataClick()\\\">Load</button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","\nimport { Component, OnInit, ɵConsole } from '@angular/core';\nimport { FormGroup, FormBuilder, Validator, Validators, AbstractControl, FormArray } from \"@angular/forms\";\nimport { CustomValidators } from '../shared/custom.validators';\nimport { ActivatedRoute } from '@angular/router';\nimport { EmployeeService } from './employee.service';\nimport { IEmployee } from './IEmployee';\nimport { ISkill } from './ISkill';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n  employeeForm: FormGroup;\n  employee: IEmployee;\n  pageTitle: string;\n\n  // fullNameLength=0;\n  validationMessages = {\n    'fullName': {\n      'required': \"Full Name is required\",\n      'minlength': \"Full Name must be greater than 2 Characters.\",\n      'maxlength': \"Full Name must be less than 10 characters.\"\n    },\n    'email': {\n      'required': \"Email is required.\",\n      'emailDomain': \"Email domain should be capgemini.com\"\n    },\n    'confirmEmail': {\n      'required': \"Confirm Email is required\"\n    },\n    'emailGroup': {\n      'emailMismatch': 'Email and confirm Email do not match.'\n    },\n    'phone': {\n      'required': \"Phone is required.\",\n    }\n  };\n\n  formErrors = {\n  };\n\n\n  constructor(private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.employeeForm = this.fb.group({\n      fullName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(10)]],\n      contactPreference: ['email'],\n      emailGroup: this.fb.group({\n        email: ['', [Validators.required, CustomValidators.emailDomain(\"capgemini.com\")]],\n        confirmEmail: ['', Validators.required]\n      }, {\n          validator: matchEmail\n        }),\n      phone: [''],\n      skills: this.fb.array([\n        this.addSkillFormGroup()\n      ])\n    })\n\n    this.employeeForm.get('contactPreference').valueChanges.subscribe((data: string) => {   //Subscribing the contactPreference data\n      this.onContactPreferenceChange(data);\n    })\n\n    this.employeeForm.valueChanges.subscribe((data) => {   //Subscribing the form data\n      this.logValidationErrors(this.employeeForm);\n    })\n\n    this.route.paramMap.subscribe(params => {\n      const empId = +params.get('id');\n      if (empId) {\n        this.pageTitle = 'Edit Employee';\n        this.getEmployee(empId);\n      } else {\n        this.pageTitle = 'Create Employee';\n        this.employee = {\n          id: null,\n          fullName: '',\n          contactPreference: '',\n          email: '',\n          phone: null,\n          EmployeesSkillDetails: []\n        }\n      };\n    })\n  }\n\n  getEmployee(id: number) {\n    this.employeeService.getEmployee(id).subscribe(\n      (employee: IEmployee[]) => {\n        this.editEmployee(employee);\n        this.employee = employee[0];\n        console.log(this.employee);\n      },\n      (err: any) => console.log(err)\n    );\n  }\n\n  editEmployee(employee: any) {\n    this.employeeForm.patchValue({\n      fullName: employee[0].fullName,\n      contactPreference: employee[0].contactPreference,\n      emailGroup: {\n        email: employee[0].email,\n        confirmEmail: employee[0].email\n      },\n      phone: employee[0].phone\n    })\n\n    this.employeeForm.setControl('skills', this.setExistingSkills(employee[0].skills))\n  }\n\n  setExistingSkills(skillSets: ISkill[]): FormArray {\n    const formArray = new FormArray([]);\n    skillSets.forEach(s => {\n      formArray.push(this.fb.group({\n        skillName: s.skillName,\n        experienceInYears: s.experienceInYears,\n        proficiency: s.proficiency\n      }))\n    })\n    return formArray;\n  }\n\n\n\n\n  addSkillButtonClick(): void {\n    (<FormArray>this.employeeForm.get('skills')).push(this.addSkillFormGroup())\n    console.log(this.employeeForm.get('skills'))\n  }\n\n  removeSkillButtonClick(skillGroupIndex: number): void {\n    const skillsFormArray = <FormArray>this.employeeForm.get('skills')\n    skillsFormArray.removeAt(skillGroupIndex);\n    skillsFormArray.markAsDirty();\n    skillsFormArray.markAsTouched();\n  }\n\n  addSkillFormGroup(): FormGroup {\n    return this.fb.group({\n      skillName: ['', Validators.required],\n      experienceInYears: ['', Validators.required],\n      proficiency: ['', Validators.required]\n    });\n  }\n\n\n\n  // For email and phone contactpreference validation\n  onContactPreferenceChange(selectedValue: string) {\n    const phoneFormControl = this.employeeForm.get('phone');\n    if (selectedValue === 'phone') {\n      phoneFormControl.setValidators(Validators.required);\n    } else {\n      phoneFormControl.clearValidators();\n    }\n    phoneFormControl.updateValueAndValidity();\n  }\n  // this.employeeForm.get(\"fullName\").valueChanges.subscribe((value:string)=>{\n  //   this.fullNameLength=value.length;\n  // });\n\n\n\n  // Disable the controls based on requirement\n  logKeyValuePairs(group: FormGroup): void {\n    Object.keys(group.controls).forEach((key: string) => {\n      const abstractControl = group.get(key);\n      if (abstractControl instanceof FormGroup) {\n        this.logKeyValuePairs(abstractControl);\n        abstractControl.disable();                    //only nested formgroup controls are disabled\n      } else {\n        // console.log('key ='+key+'value ='+abstractControl.value);\n        // abstractControl.disable();\n      }\n    })\n\n  }\n\n  // Validation logic in component control file not in view control file \n  logValidationErrors(group: FormGroup = this.employeeForm): void {\n    Object.keys(group.controls).forEach((key: string) => {\n      const abstractControl = group.get(key);\n\n      this.formErrors[key] = '';\n      if (abstractControl && !abstractControl.valid &&\n        (abstractControl.touched || abstractControl.dirty || abstractControl.value !== '')) {\n        const messages = this.validationMessages[key];\n        for (const errorKey in abstractControl.errors) {\n          if (errorKey) {\n            this.formErrors[key] += messages[errorKey] + ' ';\n          }\n        }\n      }\n\n      if (abstractControl instanceof FormGroup) {\n        this.logValidationErrors(abstractControl);\n      }\n    })\n  }\n\n\n\n  //Load button for loading data for editing\n  onLoadDataClick(): void {\n    this.employeeForm.patchValue({\n      fullName: \"Kameshwar\",\n      emailGroup: {\n        email: \"kameshwargupta@capgemini.com\",\n        confirmEmail: \"kameshwargupta@capgemini.com\"\n      },\n      phone: \"7506803439\"\n    })\n    // this.logKeyValuePairs(this.employeeForm);\n    // this.logValidationErrors(this.employeeForm);\n    // console.log(this.formErrors);\n  }\n\n\n  //Submit data to check the output in console\n  onSubmit(): void {\n    // console.log(this.employeeForm.get('fullname').value);\n    this.mapFormValuesToEmployeeModel();\n    if (this.employee.id) {\n      this.employeeService.updateEmployee(this.employee).subscribe(\n        () => this.router.navigate(['employees']),\n        (err: any) => console.log(err)\n      )\n    } else {\n      this.employeeService.addEmployee(this.employee).subscribe(\n        () => this.router.navigate(['employees']),\n        (err: any) => console.log(err)\n      )\n    }\n  }\n\n  mapFormValuesToEmployeeModel() {\n    this.employee.fullName = this.employeeForm.value.fullName;\n    this.employee.contactPreference = this.employeeForm.value.contactPreference;\n    this.employee.email = this.employeeForm.value.emailGroup.email;\n    this.employee.phone = this.employeeForm.value.phone;\n    this.employee.EmployeesSkillDetails = this.employeeForm.value.skills;\n  }\n\n}\n\nfunction matchEmail(group: AbstractControl): { [key: string]: any } | null {\n  const emailControl = group.get('email');\n  const confirmEmailControl = group.get('confirmEmail');\n\n  if (emailControl.value === confirmEmailControl.value\n    || (confirmEmailControl.pristine && confirmEmailControl.value === '')) {\n    return null;\n  } else {\n    return { 'emailMismatch': true };\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\r\nimport {RouterModule,Routes} from '@angular/router'\r\nimport { ListEmployeeComponent } from './list-employee.component';\r\nimport { CreateEmployeeComponent } from './create-employee.component';\r\n\r\nconst appRoutes: Routes=[\r\n    {\r\n        path:'employees',children:[\r\n        {path:'',component:ListEmployeeComponent},\r\n        {path:'create',component:CreateEmployeeComponent},\r\n        {path:'edit/:id',component:CreateEmployeeComponent}\r\n        ]\r\n    }\r\n  \r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(appRoutes)\r\n  ],\r\n  exports:[RouterModule]\r\n})\r\nexport class EmployeeRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CreateEmployeeComponent } from './create-employee.component';\r\nimport { ListEmployeeComponent } from './list-employee.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { EmployeeRoutingModule } from './employee-routing.module'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    EmployeeRoutingModule\r\n  ],\r\n  declarations: [\r\n    CreateEmployeeComponent,\r\n    ListEmployeeComponent\r\n  ]\r\n})\r\nexport class EmployeeModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {IEmployee} from './IEmployee';\r\nimport {throwError, Observable} from 'rxjs';\r\nimport { HttpClient,HttpErrorResponse,HttpHeaders } from '@angular/common/http';\r\nimport {catchError} from \"rxjs/internal/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor(private httpClient:HttpClient) { }\r\n\r\n//   baseUrl='http://localhost:3000/employees';\r\n  baseUrl='http://localhost:59108/api/employees';\r\n  \r\n\r\n  getEmployees(): Observable<IEmployee[]>{\r\n    return this.httpClient.get<IEmployee[]>(this.baseUrl)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  private handleError(errorResponse:HttpErrorResponse){\r\n    if(errorResponse.error instanceof ErrorEvent){\r\n      console.log('Client Side Error :',errorResponse.error);\r\n    }else{\r\n      console.log('Server Side Error :',errorResponse)\r\n    }\r\n    return throwError('There is a problem with the service')\r\n  }\r\n\r\n  getEmployee(id:number): Observable<IEmployee[]>{\r\n    return this.httpClient.get<IEmployee[]>(`${this.baseUrl}/${id}`)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  addEmployee(employee:IEmployee):Observable<IEmployee>{  \r\n    console.log(employee);\r\n    return this.httpClient.post<IEmployee>(this.baseUrl,employee,{\r\n      headers:new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    })\r\n  }\r\n\r\n  updateEmployee(employee:IEmployee):Observable<void>{\r\n    return this.httpClient.put<void>(`${this.baseUrl}/${employee.id}`,employee,{\r\n      headers:new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  deleteEmployee(id:number): Observable<any>{\r\n    console.log(id);\r\n    return this.httpClient.delete<any>(`${this.baseUrl}/${id}`)\r\n    .pipe(catchError(this.handleError));\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVlL2xpc3QtZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n      <tr class=\\\"bg-primary\\\">\\n        <th>Name</th>\\n        <th>Email</th>\\n        <th>Phone</th>\\n        <th>Contact Preference</th>\\n        <th colspan=\\\"2\\\">Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let employee of employees\\\">\\n        <td>{{employee.fullName}}</td>\\n        <td>{{employee.email}}</td>\\n        <td>{{employee.phone}}</td>\\n        <td>{{employee.contactPreference}}</td>\\n        <td><button class=\\\"btn btn-primary\\\" (click)=\\\"editButtonClick(employee.id)\\\">Edit</button></td>\\n        <td><button class=\\\"btn btn-primary\\\" (click)=\\\"deleteButtonClick(employee.id)\\\">Delete</button></td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<div>\\n  <h2>Cookies</h2>\\n  <button  class=\\\"btn-primary\\\" (click)=\\\"setCookies()\\\">Set Cookies</button>\\n  <button  class=\\\"btn-primary\\\" (click)=\\\"getCookies()\\\">Get Cookies</button>\\n  <button  class=\\\"btn-danger\\\" (click)=\\\"deleteCookies()\\\">Delete Cookies</button>\\n</div>\\n\\n<div>\\n    <h2>Local Storage</h2>\\n    <button  class=\\\"btn-primary\\\" (click)=\\\"setlocalstorage()\\\">Set Local Storage</button>\\n    <button  class=\\\"btn-primary\\\" (click)=\\\"getlocalstorage()\\\">Get Local Storage</button>\\n    <button  class=\\\"btn-danger\\\" (click)=\\\"deletelocalstorage()\\\">Delete Local Storage</button>\\n</div>\\n\\n\\n<div>\\n    <h2>Session Storage</h2>\\n    <button  class=\\\"btn-primary\\\" (click)=\\\"setsessionstorage()\\\">Set Session Storage</button>\\n    <button  class=\\\"btn-primary\\\" (click)=\\\"getsessionstorage()\\\">Get Session Storage</button>\\n    <button  class=\\\"btn-danger\\\" (click)=\\\"deletesessionstorage()\\\">Delete Session Storage</button>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {IEmployee} from './IEmployee';\nimport {EmployeeService} from './employee.service';\nimport {Router} from '@angular/router'\nimport { CookieService } from 'ngx-cookie-service';\nimport { LocalStorageService, SessionStorageService, LocalStorage, SessionStorage } from 'angular-web-storage';\n \n\n@Component({\n  selector: 'app-list-employee',\n  templateUrl: './list-employee.component.html',\n  styleUrls: ['./list-employee.component.css']\n})\nexport class ListEmployeeComponent implements OnInit {\n\n\n  employees:IEmployee[];\n  constructor(private _employeeService:EmployeeService,\n    private _router:Router,private _cookiesService:CookieService,\n    private _localstorage:LocalStorageService,private _sessionstorage:SessionStorageService) { }\n\n  ngOnInit() {\n\n    this._employeeService.getEmployees().subscribe(\n      (listEmployees)=>this.employees=listEmployees,\n      (err)=>console.log(err)\n    )\n    \n  }\n\n  setCookies(){\n    this._cookiesService.set('test','testing cookies');\n  }\n\n  getCookies(){\n    alert(this._cookiesService.get(\"test\"));\n  }\n\n  deleteCookies(){\n    this._cookiesService.delete(\"test\");\n  }\n\n  setlocalstorage(){\n    this._localstorage.set(\"userName\",\"Kameshwar Gupta\")\n  }\n\n  getlocalstorage(){\n    alert(this._localstorage.get(\"userName\"));\n  }\n\n  deletelocalstorage(){\n    this._localstorage.clear();\n  }\n  \n  setsessionstorage(){\n    this._sessionstorage.set(\"logged-in\",\"Kameshwar\")\n  }\n\n  getsessionstorage(){\n    alert(this._sessionstorage.get(\"logged-in\"));\n  }\n\n  deletesessionstorage(){\n    this._sessionstorage.clear();\n  }\n\n  editButtonClick(employeeId:number){\n    console.log(this._employeeService.baseUrl);\n    this._router.navigate(['/employees/edit',employeeId])\n  }\n\n  deleteButtonClick(employeeId:number){\n    this._employeeService.deleteEmployee(employeeId).subscribe(      \n      () => this._router.navigate(['employees']),\n      (err: any) => console.log(err)\n    );\n    console.log(employeeId);\n    \n  }\n\n  \n}\n","module.exports = \".responsive {\\r\\n    width: 100%;\\r\\n    height: 20%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLFdBQVc7RUFDYiIsImZpbGUiOiJzcmMvYXBwL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZXNwb25zaXZlIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAyMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">Employee Management System</h3>\\n  </div>\\n\\n  <div class=\\\"panel-body\\\">\\n    <img src=\\\"../assets/images/Employee.png\\\" class=\\\"img-thumbnail responsive\\\"/>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<h3>The Page you are looking for cannot be found.</h3>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { AbstractControl } from '@angular/forms'\r\n\r\n//Custom validator for email which is reusable for any form\r\nexport class CustomValidators {\r\n    static emailDomain(domainName: string) {\r\n        return (control: AbstractControl): { [key: string]: any } | null => {\r\n            const email: string = control.value;\r\n            const domain = email.substring(email.lastIndexOf('@') + 1);\r\n            if (email === '' || domain === domainName) {\r\n                return null;\r\n            } else {\r\n                return { 'emailDomain': true };\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [],\r\n  exports:[\r\n    CommonModule,\r\n    ReactiveFormsModule,]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}